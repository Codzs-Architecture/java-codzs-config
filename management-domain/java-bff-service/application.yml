spring:
  boot:
    admin:
      client:
        instance:
          management-base-url: ${management.server.base.url}
  security:
    oauth2:
      client:
        registration:
          messaging-client-oidc:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "https://local.codzs.com:8004/login/oauth2/code/{registrationId}"
            scope: openid,profile
            client-name: messaging-client-oidc
            client-authentication-method: client_secret_basic
        provider:
          spring:
            issuer-uri: ${authorization.server.url}
            user-name-attribute: sub

  cloud:
    gateway:
      mvc:
        routes:
          - id: userinfo
            uri: ${authorization.server.url}
            predicates:
              - Path=/userinfo
            filters:
              - TokenRelay=
          - id: messages
            uri: https://local.codzs.com:8002
            predicates:
              - Path=/messages
            filters:
              - RelayTokenIfExists=messaging-client-authorization-code

app:
  base-uri: http://127.0.0.1:4200

management:
  server:
    base:
      url: https://local.codzs.com:${management.server.port}

platform:
  type: AWS_EC2_INSTANCE

external:
  property: application.yml in java-bff-service


# Enable detailed OAuth2 debugging
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.web.client: DEBUG
    org.springframework.boot.web.client: DEBUG
    org.springframework.security.oauth2.client: TRACE
    org.springframework.security.oauth2.client.endpoint: TRACE