authorization:
  mongodb:
    host: ${authorization.mongodb.host:localhost}
    port: ${authorization.mongodb.port:27017}
    database: ${authorization.mongodb.database:authorization}
    username: ${authorization.mongodb.username:}
    password: ${authorization.mongodb.password:}
  redis:
    host: localhost
    port: 6379

spring:
  data:
    mongodb:
      host: ${authorization.mongodb.host}
      port: ${authorization.mongodb.port}
      database: ${authorization.mongodb.database}
      username: ${authorization.mongodb.username}
      password: ${authorization.mongodb.password}
  session:
    store-type: redis
    redis:
      namespace: "authorization-service:sessions"
      flush-mode: on_save
      save-mode: on_set_attribute
    timeout: 30m
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${google.client_id}
            client-secret: ${google.client_secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: ${github.client_id}
            client-secret: ${github.client_secret}
            scope: user:email, read:user
            client-name: Sign in with GitHub
          google:
            client-id: ${google.client_id}
            client-secret: ${google.client_secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github:
            client-id: ${github.client_id}
            client-secret: ${github.client_secret}
            scope: user:email, read:user
            client-name: Sign in with GitHub
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login

management:
  server:
    base:
      url: https://local.codzs.com:${management.server.port}

mongock:
  migration-scan-package: com.codzs.migration
  enabled: true

device:
  security:
    rate-limiting:
      enabled: true
      requests-per-minute: 10
      time-window-minutes: 1

security:
  ip-blacklist:
    enabled: true
    block-response-delay-ms: 1000
  ip-whitelist:
    enabled: true
    block-response-delay-ms: 1000
    enforce-mode: false

app:
  security:
    hsts:
      max-age-seconds: 31536000
      include-sub-domains: true
    csp:
      default-src: "'self'"
      script-src: "'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net"
      style-src: "'self' 'unsafe-inline' https://cdn.jsdelivr.net"
      img-src: "'self' data: https:"
      font-src: "'self' https://cdn.jsdelivr.net"
      form-action: "'self'"
      base-uri: "'self'"
      connect-src: "'self' https://local.codzs.com:*"
    device-cors:
      allowed-origins:
        - "https://local.codzs.com:4200"
        - "https://local.codzs.com:8001"
        - "https://local.codzs.com:8004"
        - "https://local.codzs.com:5002"
        - "http://localhost:4200"
        - "http://127.0.0.1:4200"
      allowed-headers:
        - "Content-Type"
        - "Authorization"
        - "X-Requested-With"
        - "X-XSRF-TOKEN"
      allowed-methods:
        - "GET"
        - "POST"
        - "OPTIONS"
      allow-credentials: true
      max-age-seconds: 1800
  cors:
    allowed-origins: "http://localhost:4200,http://127.0.0.1:4200,https://local.codzs.com:4200,https://local.codzs.com:5002"
    allow-credentials: true

resilience4j:
  ratelimiter:
    instances:
      device-authorization:
        limit-for-period: 10
        limit-refresh-period: 60s
        timeout-duration: 100ms
        register-health-indicator: true
        event-consumer-buffer-size: 100
    metrics:
      enabled: true
      distribution-statistic-expiry: 1m
      distribution-statistic-buffer-size: 100
